API THROTTLING
--------------
# Merged the api-throttling gem with minimal interval methods from the rack-throttle gem.
# And vendorized in the plugins directory.
# Added an dependency to Airbrake by adding a Airbrake notifier if rate limit is exceeded.

REDIS
------
# In production on Heroku we use Redis (add-on RedisToGo) as cache for the api-throttling
# Add a variable to Heroku REDIS_TO_GO_URL with the correct url, see http://devcenter.heroku.com/articles/config-vars
# (or add a redis.yml config file with the url to redistogo if not using Heroku)
# See https://redistogo.com/documentation/heroku

Import PG backups from Heroku into local database
-------------------------------------------------
# curl -o latest.dump `heroku pgbackups:url` ()
# pg_restore --verbose --clean --no-acl --no-owner -h localhost -U emonweb -d emonweb_development latest.dump